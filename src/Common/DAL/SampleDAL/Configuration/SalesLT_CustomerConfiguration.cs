// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace SampleDAL
{
    // Customer
    public partial class SalesLT_CustomerConfiguration : IEntityTypeConfiguration<SalesLT_Customer>
    {
        public void Configure(EntityTypeBuilder<SalesLT_Customer> builder)
        {
            builder.ToTable("Customer", "SalesLT");
            builder.HasKey(x => x.CustomerId).HasName("PK_Customer_CustomerID").IsClustered();

            builder.Property(x => x.CustomerId).HasColumnName(@"CustomerID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.NameStyle).HasColumnName(@"NameStyle").HasColumnType("bit").IsRequired();
            builder.Property(x => x.Title).HasColumnName(@"Title").HasColumnType("nvarchar(8)").IsRequired(false).HasMaxLength(8);
            builder.Property(x => x.FirstName).HasColumnName(@"FirstName").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.MiddleName).HasColumnName(@"MiddleName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.LastName).HasColumnName(@"LastName").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.Suffix).HasColumnName(@"Suffix").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.CompanyName).HasColumnName(@"CompanyName").HasColumnType("nvarchar(128)").IsRequired(false).HasMaxLength(128);
            builder.Property(x => x.SalesPerson).HasColumnName(@"SalesPerson").HasColumnType("nvarchar(256)").IsRequired(false).HasMaxLength(256);
            builder.Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Phone).HasColumnName(@"Phone").HasColumnType("nvarchar(25)").IsRequired(false).HasMaxLength(25);
            builder.Property(x => x.PasswordHash).HasColumnName(@"PasswordHash").HasColumnType("varchar(128)").IsRequired().IsUnicode(false).HasMaxLength(128);
            builder.Property(x => x.PasswordSalt).HasColumnName(@"PasswordSalt").HasColumnType("varchar(10)").IsRequired().IsUnicode(false).HasMaxLength(10);
            builder.Property(x => x.Rowguid).HasColumnName(@"rowguid").HasColumnType("uniqueidentifier").IsRequired();
            builder.Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();

            builder.HasIndex(x => x.Rowguid).HasDatabaseName("AK_Customer_rowguid").IsUnique();
            builder.HasIndex(x => x.EmailAddress).HasDatabaseName("IX_Customer_EmailAddress");

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<SalesLT_Customer> builder);
    }

}
// </auto-generated>
