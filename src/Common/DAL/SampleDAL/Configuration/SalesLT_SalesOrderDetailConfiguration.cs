// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace SampleDAL
{
    // SalesOrderDetail
    public class SalesLT_SalesOrderDetailConfiguration : IEntityTypeConfiguration<SalesLT_SalesOrderDetail>
    {
        public void Configure(EntityTypeBuilder<SalesLT_SalesOrderDetail> builder)
        {
            builder.ToTable("SalesOrderDetail", "SalesLT");
            builder.HasKey(x => new { x.SalesOrderId, x.SalesOrderDetailId }).HasName("PK_SalesOrderDetail_SalesOrderID_SalesOrderDetailID").IsClustered();

            builder.Property(x => x.SalesOrderId).HasColumnName(@"SalesOrderID").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.SalesOrderDetailId).HasColumnName(@"SalesOrderDetailID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.OrderQty).HasColumnName(@"OrderQty").HasColumnType("smallint").IsRequired();
            builder.Property(x => x.ProductId).HasColumnName(@"ProductID").HasColumnType("int").IsRequired();
            builder.Property(x => x.UnitPrice).HasColumnName(@"UnitPrice").HasColumnType("money").IsRequired();
            builder.Property(x => x.UnitPriceDiscount).HasColumnName(@"UnitPriceDiscount").HasColumnType("money").IsRequired();
            builder.Property(x => x.LineTotal).HasColumnName(@"LineTotal").HasColumnType("numeric(38,6)").HasPrecision(38,6).IsRequired().ValueGeneratedOnAddOrUpdate();
            builder.Property(x => x.Rowguid).HasColumnName(@"rowguid").HasColumnType("uniqueidentifier").IsRequired();
            builder.Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.SalesLT_Product).WithMany(b => b.SalesLT_SalesOrderDetails).HasForeignKey(c => c.ProductId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_SalesOrderDetail_Product_ProductID");
            builder.HasOne(a => a.SalesLT_SalesOrderHeader).WithMany(b => b.SalesLT_SalesOrderDetails).HasForeignKey(c => c.SalesOrderId).HasConstraintName("FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID");

            builder.HasIndex(x => x.Rowguid).HasDatabaseName("AK_SalesOrderDetail_rowguid").IsUnique();
            builder.HasIndex(x => x.ProductId).HasDatabaseName("IX_SalesOrderDetail_ProductID");
        }
    }

}
// </auto-generated>
