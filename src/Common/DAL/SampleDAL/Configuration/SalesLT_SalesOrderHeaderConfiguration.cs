// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace SampleDAL
{
    // SalesOrderHeader
    public class SalesLT_SalesOrderHeaderConfiguration : IEntityTypeConfiguration<SalesLT_SalesOrderHeader>
    {
        public void Configure(EntityTypeBuilder<SalesLT_SalesOrderHeader> builder)
        {
            builder.ToTable("SalesOrderHeader", "SalesLT");
            builder.HasKey(x => x.SalesOrderId).HasName("PK_SalesOrderHeader_SalesOrderID").IsClustered();

            builder.Property(x => x.SalesOrderId).HasColumnName(@"SalesOrderID").HasColumnType("int").IsRequired().HasDefaultValueSql(@"NEXT VALUE FOR [SalesLT].[SalesOrderNumber]");
            builder.Property(x => x.RevisionNumber).HasColumnName(@"RevisionNumber").HasColumnType("tinyint").IsRequired();
            builder.Property(x => x.OrderDate).HasColumnName(@"OrderDate").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.DueDate).HasColumnName(@"DueDate").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.ShipDate).HasColumnName(@"ShipDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.Status).HasColumnName(@"Status").HasColumnType("tinyint").IsRequired();
            builder.Property(x => x.OnlineOrderFlag).HasColumnName(@"OnlineOrderFlag").HasColumnType("bit").IsRequired();
            builder.Property(x => x.SalesOrderNumber).HasColumnName(@"SalesOrderNumber").HasColumnType("nvarchar(25)").IsRequired().HasMaxLength(25).ValueGeneratedOnAddOrUpdate();
            builder.Property(x => x.PurchaseOrderNumber).HasColumnName(@"PurchaseOrderNumber").HasColumnType("nvarchar(25)").IsRequired(false).HasMaxLength(25);
            builder.Property(x => x.AccountNumber).HasColumnName(@"AccountNumber").HasColumnType("nvarchar(15)").IsRequired(false).HasMaxLength(15);
            builder.Property(x => x.CustomerId).HasColumnName(@"CustomerID").HasColumnType("int").IsRequired();
            builder.Property(x => x.ShipToAddressId).HasColumnName(@"ShipToAddressID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BillToAddressId).HasColumnName(@"BillToAddressID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ShipMethod).HasColumnName(@"ShipMethod").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.CreditCardApprovalCode).HasColumnName(@"CreditCardApprovalCode").HasColumnType("varchar(15)").IsRequired(false).IsUnicode(false).HasMaxLength(15);
            builder.Property(x => x.SubTotal).HasColumnName(@"SubTotal").HasColumnType("money").IsRequired();
            builder.Property(x => x.TaxAmt).HasColumnName(@"TaxAmt").HasColumnType("money").IsRequired();
            builder.Property(x => x.Freight).HasColumnName(@"Freight").HasColumnType("money").IsRequired();
            builder.Property(x => x.TotalDue).HasColumnName(@"TotalDue").HasColumnType("money").IsRequired().ValueGeneratedOnAddOrUpdate();
            builder.Property(x => x.Comment).HasColumnName(@"Comment").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Rowguid).HasColumnName(@"rowguid").HasColumnType("uniqueidentifier").IsRequired();
            builder.Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.BillToAddress).WithMany(b => b.SalesLT_SalesOrderHeaders_BillToAddressId).HasForeignKey(c => c.BillToAddressId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_SalesOrderHeader_Address_BillTo_AddressID");
            builder.HasOne(a => a.SalesLT_Customer).WithMany(b => b.SalesLT_SalesOrderHeaders).HasForeignKey(c => c.CustomerId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_SalesOrderHeader_Customer_CustomerID");
            builder.HasOne(a => a.ShipToAddress).WithMany(b => b.SalesLT_SalesOrderHeaders_ShipToAddressId).HasForeignKey(c => c.ShipToAddressId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_SalesOrderHeader_Address_ShipTo_AddressID");

            builder.HasIndex(x => x.Rowguid).HasDatabaseName("AK_SalesOrderHeader_rowguid").IsUnique();
            builder.HasIndex(x => x.SalesOrderNumber).HasDatabaseName("AK_SalesOrderHeader_SalesOrderNumber").IsUnique();
            builder.HasIndex(x => x.CustomerId).HasDatabaseName("IX_SalesOrderHeader_CustomerID");
        }
    }

}
// </auto-generated>
